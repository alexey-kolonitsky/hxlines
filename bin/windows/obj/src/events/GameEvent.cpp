// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#include <hxcpp.h>

#ifndef INCLUDED_events_GameEvent
#include <events/GameEvent.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_cb0fd992609bb24f_4_new,"events.GameEvent","new",0xecb0cf85,"events.GameEvent.new","events/GameEvent.hx",4,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_26_clone,"events.GameEvent","clone",0xc559e5c2,"events.GameEvent.clone","events/GameEvent.hx",26,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_6_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",6,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_7_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",7,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_8_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",8,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_9_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",9,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_10_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",10,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_11_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",11,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_12_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",12,0x4112c50c)
HX_LOCAL_STACK_FRAME(_hx_pos_cb0fd992609bb24f_13_boot,"events.GameEvent","boot",0x261dc56d,"events.GameEvent.boot","events/GameEvent.hx",13,0x4112c50c)
namespace events{

void GameEvent_obj::__construct(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable,hx::Null< int >  __o_index){
bool bubbles = __o_bubbles.Default(false);
bool cancelable = __o_cancelable.Default(false);
int index = __o_index.Default(-1);
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_4_new)
HXLINE(  15)		this->index = (int)-1;
HXLINE(  18)		super::__construct(type,bubbles,cancelable);
HXLINE(  19)		this->index = index;
            	}

Dynamic GameEvent_obj::__CreateEmpty() { return new GameEvent_obj; }

void *GameEvent_obj::_hx_vtable = 0;

Dynamic GameEvent_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GameEvent_obj > _hx_result = new GameEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool GameEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1c51d16f) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1c51d16f;
	} else {
		return inClassId==(int)0x3243040d;
	}
}

 ::openfl::events::Event GameEvent_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_cb0fd992609bb24f_26_clone)
HXLINE(  27)		 ::events::GameEvent gameEvent =  ::events::GameEvent_obj::__alloc( HX_CTX ,this->type,this->bubbles,this->cancelable,this->index);
HXLINE(  28)		return gameEvent;
            	}


::String GameEvent_obj::CREATE;

::String GameEvent_obj::START;

::String GameEvent_obj::RESULT;

::String GameEvent_obj::SELECT;

::String GameEvent_obj::MOVE;

::String GameEvent_obj::MENU;

::String GameEvent_obj::PATH;

::String GameEvent_obj::SAVE_RESULT;


hx::ObjectPtr< GameEvent_obj > GameEvent_obj::__new(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable,hx::Null< int >  __o_index) {
	hx::ObjectPtr< GameEvent_obj > __this = new GameEvent_obj();
	__this->__construct(type,__o_bubbles,__o_cancelable,__o_index);
	return __this;
}

hx::ObjectPtr< GameEvent_obj > GameEvent_obj::__alloc(hx::Ctx *_hx_ctx,::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable,hx::Null< int >  __o_index) {
	GameEvent_obj *__this = (GameEvent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GameEvent_obj), true, "events.GameEvent"));
	*(void **)__this = GameEvent_obj::_hx_vtable;
	__this->__construct(type,__o_bubbles,__o_cancelable,__o_index);
	return __this;
}

GameEvent_obj::GameEvent_obj()
{
}

hx::Val GameEvent_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"index") ) { return hx::Val( index); }
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool GameEvent_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"MOVE") ) { outValue = MOVE; return true; }
		if (HX_FIELD_EQ(inName,"MENU") ) { outValue = MENU; return true; }
		if (HX_FIELD_EQ(inName,"PATH") ) { outValue = PATH; return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"START") ) { outValue = START; return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"CREATE") ) { outValue = CREATE; return true; }
		if (HX_FIELD_EQ(inName,"RESULT") ) { outValue = RESULT; return true; }
		if (HX_FIELD_EQ(inName,"SELECT") ) { outValue = SELECT; return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"SAVE_RESULT") ) { outValue = SAVE_RESULT; return true; }
	}
	return false;
}

hx::Val GameEvent_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"index") ) { index=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool GameEvent_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"MOVE") ) { MOVE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"MENU") ) { MENU=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"PATH") ) { PATH=ioValue.Cast< ::String >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"START") ) { START=ioValue.Cast< ::String >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"CREATE") ) { CREATE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"RESULT") ) { RESULT=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SELECT") ) { SELECT=ioValue.Cast< ::String >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"SAVE_RESULT") ) { SAVE_RESULT=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void GameEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("index","\x12","\x9b","\x14","\xbe"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo GameEvent_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(GameEvent_obj,index),HX_HCSTRING("index","\x12","\x9b","\x14","\xbe")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo GameEvent_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &GameEvent_obj::CREATE,HX_HCSTRING("CREATE","\xfc","\x12","\x92","\x2e")},
	{hx::fsString,(void *) &GameEvent_obj::START,HX_HCSTRING("START","\x42","\xac","\xf9","\x01")},
	{hx::fsString,(void *) &GameEvent_obj::RESULT,HX_HCSTRING("RESULT","\xdd","\x14","\x07","\xbb")},
	{hx::fsString,(void *) &GameEvent_obj::SELECT,HX_HCSTRING("SELECT","\xfc","\xc6","\xb5","\x1c")},
	{hx::fsString,(void *) &GameEvent_obj::MOVE,HX_HCSTRING("MOVE","\x11","\xab","\x21","\x33")},
	{hx::fsString,(void *) &GameEvent_obj::MENU,HX_HCSTRING("MENU","\x9f","\x0d","\x1a","\x33")},
	{hx::fsString,(void *) &GameEvent_obj::PATH,HX_HCSTRING("PATH","\xa5","\xad","\x12","\x35")},
	{hx::fsString,(void *) &GameEvent_obj::SAVE_RESULT,HX_HCSTRING("SAVE_RESULT","\xdf","\x64","\x35","\x0c")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String GameEvent_obj_sMemberFields[] = {
	HX_HCSTRING("index","\x12","\x9b","\x14","\xbe"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	::String(null()) };

static void GameEvent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GameEvent_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(GameEvent_obj::CREATE,"CREATE");
	HX_MARK_MEMBER_NAME(GameEvent_obj::START,"START");
	HX_MARK_MEMBER_NAME(GameEvent_obj::RESULT,"RESULT");
	HX_MARK_MEMBER_NAME(GameEvent_obj::SELECT,"SELECT");
	HX_MARK_MEMBER_NAME(GameEvent_obj::MOVE,"MOVE");
	HX_MARK_MEMBER_NAME(GameEvent_obj::MENU,"MENU");
	HX_MARK_MEMBER_NAME(GameEvent_obj::PATH,"PATH");
	HX_MARK_MEMBER_NAME(GameEvent_obj::SAVE_RESULT,"SAVE_RESULT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GameEvent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GameEvent_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::CREATE,"CREATE");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::START,"START");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::RESULT,"RESULT");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::SELECT,"SELECT");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::MOVE,"MOVE");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::MENU,"MENU");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::PATH,"PATH");
	HX_VISIT_MEMBER_NAME(GameEvent_obj::SAVE_RESULT,"SAVE_RESULT");
};

#endif

hx::Class GameEvent_obj::__mClass;

static ::String GameEvent_obj_sStaticFields[] = {
	HX_HCSTRING("CREATE","\xfc","\x12","\x92","\x2e"),
	HX_HCSTRING("START","\x42","\xac","\xf9","\x01"),
	HX_HCSTRING("RESULT","\xdd","\x14","\x07","\xbb"),
	HX_HCSTRING("SELECT","\xfc","\xc6","\xb5","\x1c"),
	HX_HCSTRING("MOVE","\x11","\xab","\x21","\x33"),
	HX_HCSTRING("MENU","\x9f","\x0d","\x1a","\x33"),
	HX_HCSTRING("PATH","\xa5","\xad","\x12","\x35"),
	HX_HCSTRING("SAVE_RESULT","\xdf","\x64","\x35","\x0c"),
	::String(null())
};

void GameEvent_obj::__register()
{
	hx::Object *dummy = new GameEvent_obj;
	GameEvent_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("events.GameEvent","\x13","\xa9","\xcf","\x91");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GameEvent_obj::__GetStatic;
	__mClass->mSetStaticField = &GameEvent_obj::__SetStatic;
	__mClass->mMarkFunc = GameEvent_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GameEvent_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(GameEvent_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< GameEvent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GameEvent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameEvent_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void GameEvent_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_6_boot)
HXLINE(   6)		CREATE = HX_("createPuzzle",da,81,30,99);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_7_boot)
HXLINE(   7)		START = HX_("startPuzzle",c0,9f,c1,ee);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_8_boot)
HXLINE(   8)		RESULT = HX_("resultPuzzle",7b,a2,39,8d);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_9_boot)
HXLINE(   9)		SELECT = HX_("selectChip",e8,da,5a,b0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_10_boot)
HXLINE(  10)		MOVE = HX_("moveChip",7d,d1,76,e4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_11_boot)
HXLINE(  11)		MENU = HX_("menu",9f,45,59,48);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_12_boot)
HXLINE(  12)		PATH = HX_("chipPath",91,4d,bf,b0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb0fd992609bb24f_13_boot)
HXLINE(  13)		SAVE_RESULT = HX_("saveResult",fa,f3,3d,51);
            	}
}

} // end namespace events
