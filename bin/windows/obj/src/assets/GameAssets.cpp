// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#include <hxcpp.h>

#ifndef INCLUDED_assets_GameAssets
#include <assets/GameAssets.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_11_get_BTN_RESTART_BITMAP,"assets.GameAssets","get_BTN_RESTART_BITMAP",0x44c0ab59,"assets.GameAssets.get_BTN_RESTART_BITMAP","assets/GameAssets.hx",11,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_15_get_BTN_CONTINUE_BITMAP,"assets.GameAssets","get_BTN_CONTINUE_BITMAP",0x0965192d,"assets.GameAssets.get_BTN_CONTINUE_BITMAP","assets/GameAssets.hx",15,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_19_get_BTN_MENU_BITMAP,"assets.GameAssets","get_BTN_MENU_BITMAP",0x54eb07f5,"assets.GameAssets.get_BTN_MENU_BITMAP","assets/GameAssets.hx",19,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_23_get_IMG_TIME_BITMAP,"assets.GameAssets","get_IMG_TIME_BITMAP",0x4df1f36e,"assets.GameAssets.get_IMG_TIME_BITMAP","assets/GameAssets.hx",23,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_27_get_IMG_SCORE_BITMAP,"assets.GameAssets","get_IMG_SCORE_BITMAP",0x9f34e1af,"assets.GameAssets.get_IMG_SCORE_BITMAP","assets/GameAssets.hx",27,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_31_get_BACKGROUND_BITMAP,"assets.GameAssets","get_BACKGROUND_BITMAP",0x0b969b89,"assets.GameAssets.get_BACKGROUND_BITMAP","assets/GameAssets.hx",31,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_35_get_BACKGROUND_MENU_BITMAP,"assets.GameAssets","get_BACKGROUND_MENU_BITMAP",0x335193f5,"assets.GameAssets.get_BACKGROUND_MENU_BITMAP","assets/GameAssets.hx",35,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_39_get_LEADBOARD_BITMAP,"assets.GameAssets","get_LEADBOARD_BITMAP",0x50fced5b,"assets.GameAssets.get_LEADBOARD_BITMAP","assets/GameAssets.hx",39,0x508d71dd)
HX_LOCAL_STACK_FRAME(_hx_pos_cef02da5e62646c1_43_get_CHIPS_BITMAP,"assets.GameAssets","get_CHIPS_BITMAP",0xfb423bde,"assets.GameAssets.get_CHIPS_BITMAP","assets/GameAssets.hx",43,0x508d71dd)
namespace assets{

void GameAssets_obj::__construct() { }

Dynamic GameAssets_obj::__CreateEmpty() { return new GameAssets_obj; }

void *GameAssets_obj::_hx_vtable = 0;

Dynamic GameAssets_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GameAssets_obj > _hx_result = new GameAssets_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GameAssets_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x363cd9f8;
}

 ::openfl::display::BitmapData GameAssets_obj::get_BTN_RESTART_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_11_get_BTN_RESTART_BITMAP)
HXLINE(  11)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/btnNewGame.png",db,8f,0d,32),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_BTN_RESTART_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_BTN_CONTINUE_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_15_get_BTN_CONTINUE_BITMAP)
HXLINE(  15)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/btnContinueGame.png",c6,35,22,d1),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_BTN_CONTINUE_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_BTN_MENU_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_19_get_BTN_MENU_BITMAP)
HXLINE(  19)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/btnMenu.png",6c,24,10,51),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_BTN_MENU_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_IMG_TIME_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_23_get_IMG_TIME_BITMAP)
HXLINE(  23)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/iconTime.png",0b,30,3b,7c),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_IMG_TIME_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_IMG_SCORE_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_27_get_IMG_SCORE_BITMAP)
HXLINE(  27)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/iconScore.png",ea,bf,a8,12),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_IMG_SCORE_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_BACKGROUND_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_31_get_BACKGROUND_BITMAP)
HXLINE(  31)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/background.png",53,76,1e,2f),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_BACKGROUND_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_BACKGROUND_MENU_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_35_get_BACKGROUND_MENU_BITMAP)
HXLINE(  35)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/background-result.png",ed,2c,41,39),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_BACKGROUND_MENU_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_LEADBOARD_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_39_get_LEADBOARD_BITMAP)
HXLINE(  39)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/leadBoard.png",bb,d4,18,ab),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_LEADBOARD_BITMAP,return )

 ::openfl::display::BitmapData GameAssets_obj::get_CHIPS_BITMAP(){
            	HX_STACKFRAME(&_hx_pos_cef02da5e62646c1_43_get_CHIPS_BITMAP)
HXLINE(  43)		return ::openfl::utils::Assets_obj::getBitmapData(HX_("resources/chips.png",f8,83,57,92),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameAssets_obj,get_CHIPS_BITMAP,return )


GameAssets_obj::GameAssets_obj()
{
}

bool GameAssets_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"CHIPS_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_CHIPS_BITMAP(); return true; } }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"BTN_MENU_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_BTN_MENU_BITMAP(); return true; } }
		if (HX_FIELD_EQ(inName,"IMG_TIME_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_IMG_TIME_BITMAP(); return true; } }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"IMG_SCORE_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_IMG_SCORE_BITMAP(); return true; } }
		if (HX_FIELD_EQ(inName,"LEADBOARD_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_LEADBOARD_BITMAP(); return true; } }
		if (HX_FIELD_EQ(inName,"get_CHIPS_BITMAP") ) { outValue = get_CHIPS_BITMAP_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"BACKGROUND_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_BACKGROUND_BITMAP(); return true; } }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"BTN_RESTART_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_BTN_RESTART_BITMAP(); return true; } }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"BTN_CONTINUE_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_BTN_CONTINUE_BITMAP(); return true; } }
		if (HX_FIELD_EQ(inName,"get_BTN_MENU_BITMAP") ) { outValue = get_BTN_MENU_BITMAP_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_IMG_TIME_BITMAP") ) { outValue = get_IMG_TIME_BITMAP_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"get_IMG_SCORE_BITMAP") ) { outValue = get_IMG_SCORE_BITMAP_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_LEADBOARD_BITMAP") ) { outValue = get_LEADBOARD_BITMAP_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_BACKGROUND_BITMAP") ) { outValue = get_BACKGROUND_BITMAP_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"get_BTN_RESTART_BITMAP") ) { outValue = get_BTN_RESTART_BITMAP_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"BACKGROUND_MENU_BITMAP") ) { if (inCallProp == hx::paccAlways) { outValue = get_BACKGROUND_MENU_BITMAP(); return true; } }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_BTN_CONTINUE_BITMAP") ) { outValue = get_BTN_CONTINUE_BITMAP_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"get_BACKGROUND_MENU_BITMAP") ) { outValue = get_BACKGROUND_MENU_BITMAP_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *GameAssets_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *GameAssets_obj_sStaticStorageInfo = 0;
#endif

static void GameAssets_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GameAssets_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GameAssets_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GameAssets_obj::__mClass,"__mClass");
};

#endif

hx::Class GameAssets_obj::__mClass;

static ::String GameAssets_obj_sStaticFields[] = {
	HX_HCSTRING("get_BTN_RESTART_BITMAP","\xeb","\x5c","\xa7","\x06"),
	HX_HCSTRING("get_BTN_CONTINUE_BITMAP","\x5b","\xc7","\x59","\xf1"),
	HX_HCSTRING("get_BTN_MENU_BITMAP","\x23","\x87","\xc5","\x67"),
	HX_HCSTRING("get_IMG_TIME_BITMAP","\x9c","\x72","\xcc","\x60"),
	HX_HCSTRING("get_IMG_SCORE_BITMAP","\xc1","\xaa","\x89","\x0b"),
	HX_HCSTRING("get_BACKGROUND_BITMAP","\x37","\xc2","\x71","\x69"),
	HX_HCSTRING("get_BACKGROUND_MENU_BITMAP","\x87","\x76","\x65","\xdd"),
	HX_HCSTRING("get_LEADBOARD_BITMAP","\x6d","\xb6","\x51","\xbd"),
	HX_HCSTRING("get_CHIPS_BITMAP","\xf0","\x93","\x54","\xd6"),
	::String(null())
};

void GameAssets_obj::__register()
{
	hx::Object *dummy = new GameAssets_obj;
	GameAssets_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("assets.GameAssets","\x40","\x4c","\xc8","\xa5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GameAssets_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = GameAssets_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GameAssets_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GameAssets_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GameAssets_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameAssets_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameAssets_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace assets
