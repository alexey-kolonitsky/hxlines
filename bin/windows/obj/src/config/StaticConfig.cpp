// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#include <hxcpp.h>

#ifndef INCLUDED_config_StaticConfig
#include <config/StaticConfig.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_72_get_sourceCodeURL,"config.StaticConfig","get_sourceCodeURL",0xaeecb66c,"config.StaticConfig.get_sourceCodeURL","config/StaticConfig.hx",72,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_79_get_leadBoardURL,"config.StaticConfig","get_leadBoardURL",0xb7547a00,"config.StaticConfig.get_leadBoardURL","config/StaticConfig.hx",79,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_3_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",3,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_4_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",4,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_6_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",6,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_8_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",8,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_9_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",9,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_11_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",11,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_12_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",12,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_14_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",14,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_16_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",16,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_17_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",17,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_18_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",18,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_19_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",19,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_21_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",21,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_22_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",22,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_29_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",29,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_30_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",30,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_37_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",37,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_38_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",38,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_39_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",39,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_40_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",40,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_41_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",41,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_42_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",42,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_43_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",43,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_44_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",44,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_45_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",45,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_52_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",52,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_53_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",53,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_55_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",55,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_56_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",56,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_57_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",57,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_59_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",59,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_60_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",60,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_61_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",61,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_62_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",62,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_68_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",68,0x19c61e01)
HX_LOCAL_STACK_FRAME(_hx_pos_919cd265adcf4db0_75_boot,"config.StaticConfig","boot",0x97a8b684,"config.StaticConfig.boot","config/StaticConfig.hx",75,0x19c61e01)
namespace config{

void StaticConfig_obj::__construct() { }

Dynamic StaticConfig_obj::__CreateEmpty() { return new StaticConfig_obj; }

void *StaticConfig_obj::_hx_vtable = 0;

Dynamic StaticConfig_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StaticConfig_obj > _hx_result = new StaticConfig_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StaticConfig_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x18e5e332;
}

::String StaticConfig_obj::APPLICATION_NAME;

::String StaticConfig_obj::VERSION;

bool StaticConfig_obj::DEBUG;

Float StaticConfig_obj::UPDATE_DELAY;

Float StaticConfig_obj::MOVE_DELAY;

int StaticConfig_obj::TURN_CHIP_NUMBER;

int StaticConfig_obj::LINE_LENGTH;

int StaticConfig_obj::EMPTY_CELL_CODE;

int StaticConfig_obj::LEVEL1_SCORE;

int StaticConfig_obj::LEVEL2_SCORE;

int StaticConfig_obj::LEVEL3_SCORE;

int StaticConfig_obj::LEVEL4_SCORE;

int StaticConfig_obj::COLOR_COUNT;

int StaticConfig_obj::START_COLOR_COUNT;

::String StaticConfig_obj::GAME_SCREEN;

::String StaticConfig_obj::MENU_SCREEN;

::String StaticConfig_obj::LEAD_BOARD_DEFAULT_USERNAME;

int StaticConfig_obj::LEAD_BOARD_USERNAME_MAX_LENGTH;

int StaticConfig_obj::LEAD_BOARD_LINES;

int StaticConfig_obj::LEAD_BOARD_EVEN_COLOR;

int StaticConfig_obj::LEAD_BOARD_ODD_COLOR;

int StaticConfig_obj::LEAD_BOARD_LINE_HEIGHT;

Float StaticConfig_obj::LEAD_BOARD_COL1;

Float StaticConfig_obj::LEAD_BOARD_COL2;

Float StaticConfig_obj::LEAD_BOARD_COL3;

int StaticConfig_obj::TILE_WIDTH;

int StaticConfig_obj::TILE_HEIGHT;

int StaticConfig_obj::BOARD_WIDTH;

int StaticConfig_obj::BOARD_HEIGHT;

int StaticConfig_obj::BOARD_CELLS;

Float StaticConfig_obj::BOARD_LEFT;

Float StaticConfig_obj::BOARD_TOP;

Float StaticConfig_obj::BOARD_RIGHT;

Float StaticConfig_obj::BOARD_BOTTOM;

::String StaticConfig_obj::_sourceCodeURL;

::String StaticConfig_obj::sourceCodeURL;

::String StaticConfig_obj::get_sourceCodeURL(){
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_72_get_sourceCodeURL)
HXLINE(  72)		return ::config::StaticConfig_obj::_sourceCodeURL;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(StaticConfig_obj,get_sourceCodeURL,return )

::String StaticConfig_obj::_leadBoardURL;

::String StaticConfig_obj::leadBoardURL;

::String StaticConfig_obj::get_leadBoardURL(){
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_79_get_leadBoardURL)
HXLINE(  79)		return ::config::StaticConfig_obj::_leadBoardURL;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(StaticConfig_obj,get_leadBoardURL,return )


StaticConfig_obj::StaticConfig_obj()
{
}

bool StaticConfig_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"DEBUG") ) { outValue = DEBUG; return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"VERSION") ) { outValue = VERSION; return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"BOARD_TOP") ) { outValue = BOARD_TOP; return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MOVE_DELAY") ) { outValue = MOVE_DELAY; return true; }
		if (HX_FIELD_EQ(inName,"TILE_WIDTH") ) { outValue = TILE_WIDTH; return true; }
		if (HX_FIELD_EQ(inName,"BOARD_LEFT") ) { outValue = BOARD_LEFT; return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"LINE_LENGTH") ) { outValue = LINE_LENGTH; return true; }
		if (HX_FIELD_EQ(inName,"COLOR_COUNT") ) { outValue = COLOR_COUNT; return true; }
		if (HX_FIELD_EQ(inName,"GAME_SCREEN") ) { outValue = GAME_SCREEN; return true; }
		if (HX_FIELD_EQ(inName,"MENU_SCREEN") ) { outValue = MENU_SCREEN; return true; }
		if (HX_FIELD_EQ(inName,"TILE_HEIGHT") ) { outValue = TILE_HEIGHT; return true; }
		if (HX_FIELD_EQ(inName,"BOARD_WIDTH") ) { outValue = BOARD_WIDTH; return true; }
		if (HX_FIELD_EQ(inName,"BOARD_CELLS") ) { outValue = BOARD_CELLS; return true; }
		if (HX_FIELD_EQ(inName,"BOARD_RIGHT") ) { outValue = BOARD_RIGHT; return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"UPDATE_DELAY") ) { outValue = UPDATE_DELAY; return true; }
		if (HX_FIELD_EQ(inName,"LEVEL1_SCORE") ) { outValue = LEVEL1_SCORE; return true; }
		if (HX_FIELD_EQ(inName,"LEVEL2_SCORE") ) { outValue = LEVEL2_SCORE; return true; }
		if (HX_FIELD_EQ(inName,"LEVEL3_SCORE") ) { outValue = LEVEL3_SCORE; return true; }
		if (HX_FIELD_EQ(inName,"LEVEL4_SCORE") ) { outValue = LEVEL4_SCORE; return true; }
		if (HX_FIELD_EQ(inName,"BOARD_HEIGHT") ) { outValue = BOARD_HEIGHT; return true; }
		if (HX_FIELD_EQ(inName,"BOARD_BOTTOM") ) { outValue = BOARD_BOTTOM; return true; }
		if (HX_FIELD_EQ(inName,"leadBoardURL") ) { outValue = inCallProp == hx::paccAlways ? get_leadBoardURL() : leadBoardURL; return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sourceCodeURL") ) { outValue = inCallProp == hx::paccAlways ? get_sourceCodeURL() : sourceCodeURL; return true; }
		if (HX_FIELD_EQ(inName,"_leadBoardURL") ) { outValue = _leadBoardURL; return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_sourceCodeURL") ) { outValue = _sourceCodeURL; return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"EMPTY_CELL_CODE") ) { outValue = EMPTY_CELL_CODE; return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_COL1") ) { outValue = LEAD_BOARD_COL1; return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_COL2") ) { outValue = LEAD_BOARD_COL2; return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_COL3") ) { outValue = LEAD_BOARD_COL3; return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"APPLICATION_NAME") ) { outValue = APPLICATION_NAME; return true; }
		if (HX_FIELD_EQ(inName,"TURN_CHIP_NUMBER") ) { outValue = TURN_CHIP_NUMBER; return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_LINES") ) { outValue = LEAD_BOARD_LINES; return true; }
		if (HX_FIELD_EQ(inName,"get_leadBoardURL") ) { outValue = get_leadBoardURL_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"START_COLOR_COUNT") ) { outValue = START_COLOR_COUNT; return true; }
		if (HX_FIELD_EQ(inName,"get_sourceCodeURL") ) { outValue = get_sourceCodeURL_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_ODD_COLOR") ) { outValue = LEAD_BOARD_ODD_COLOR; return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_EVEN_COLOR") ) { outValue = LEAD_BOARD_EVEN_COLOR; return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_LINE_HEIGHT") ) { outValue = LEAD_BOARD_LINE_HEIGHT; return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_DEFAULT_USERNAME") ) { outValue = LEAD_BOARD_DEFAULT_USERNAME; return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_USERNAME_MAX_LENGTH") ) { outValue = LEAD_BOARD_USERNAME_MAX_LENGTH; return true; }
	}
	return false;
}

bool StaticConfig_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"DEBUG") ) { DEBUG=ioValue.Cast< bool >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"VERSION") ) { VERSION=ioValue.Cast< ::String >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"BOARD_TOP") ) { BOARD_TOP=ioValue.Cast< Float >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MOVE_DELAY") ) { MOVE_DELAY=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"TILE_WIDTH") ) { TILE_WIDTH=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BOARD_LEFT") ) { BOARD_LEFT=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"LINE_LENGTH") ) { LINE_LENGTH=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_COUNT") ) { COLOR_COUNT=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"GAME_SCREEN") ) { GAME_SCREEN=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"MENU_SCREEN") ) { MENU_SCREEN=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"TILE_HEIGHT") ) { TILE_HEIGHT=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BOARD_WIDTH") ) { BOARD_WIDTH=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BOARD_CELLS") ) { BOARD_CELLS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BOARD_RIGHT") ) { BOARD_RIGHT=ioValue.Cast< Float >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"UPDATE_DELAY") ) { UPDATE_DELAY=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"LEVEL1_SCORE") ) { LEVEL1_SCORE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"LEVEL2_SCORE") ) { LEVEL2_SCORE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"LEVEL3_SCORE") ) { LEVEL3_SCORE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"LEVEL4_SCORE") ) { LEVEL4_SCORE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BOARD_HEIGHT") ) { BOARD_HEIGHT=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BOARD_BOTTOM") ) { BOARD_BOTTOM=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"leadBoardURL") ) { leadBoardURL=ioValue.Cast< ::String >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sourceCodeURL") ) { sourceCodeURL=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"_leadBoardURL") ) { _leadBoardURL=ioValue.Cast< ::String >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_sourceCodeURL") ) { _sourceCodeURL=ioValue.Cast< ::String >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"EMPTY_CELL_CODE") ) { EMPTY_CELL_CODE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_COL1") ) { LEAD_BOARD_COL1=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_COL2") ) { LEAD_BOARD_COL2=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_COL3") ) { LEAD_BOARD_COL3=ioValue.Cast< Float >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"APPLICATION_NAME") ) { APPLICATION_NAME=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"TURN_CHIP_NUMBER") ) { TURN_CHIP_NUMBER=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_LINES") ) { LEAD_BOARD_LINES=ioValue.Cast< int >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"START_COLOR_COUNT") ) { START_COLOR_COUNT=ioValue.Cast< int >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_ODD_COLOR") ) { LEAD_BOARD_ODD_COLOR=ioValue.Cast< int >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_EVEN_COLOR") ) { LEAD_BOARD_EVEN_COLOR=ioValue.Cast< int >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_LINE_HEIGHT") ) { LEAD_BOARD_LINE_HEIGHT=ioValue.Cast< int >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_DEFAULT_USERNAME") ) { LEAD_BOARD_DEFAULT_USERNAME=ioValue.Cast< ::String >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"LEAD_BOARD_USERNAME_MAX_LENGTH") ) { LEAD_BOARD_USERNAME_MAX_LENGTH=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *StaticConfig_obj_sMemberStorageInfo = 0;
static hx::StaticInfo StaticConfig_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &StaticConfig_obj::APPLICATION_NAME,HX_HCSTRING("APPLICATION_NAME","\xfa","\x90","\x40","\x6c")},
	{hx::fsString,(void *) &StaticConfig_obj::VERSION,HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc")},
	{hx::fsBool,(void *) &StaticConfig_obj::DEBUG,HX_HCSTRING("DEBUG","\x33","\x8a","\x0d","\x55")},
	{hx::fsFloat,(void *) &StaticConfig_obj::UPDATE_DELAY,HX_HCSTRING("UPDATE_DELAY","\x6d","\x35","\xf7","\x07")},
	{hx::fsFloat,(void *) &StaticConfig_obj::MOVE_DELAY,HX_HCSTRING("MOVE_DELAY","\x75","\x24","\x1d","\xac")},
	{hx::fsInt,(void *) &StaticConfig_obj::TURN_CHIP_NUMBER,HX_HCSTRING("TURN_CHIP_NUMBER","\x1a","\xd1","\xc4","\x6d")},
	{hx::fsInt,(void *) &StaticConfig_obj::LINE_LENGTH,HX_HCSTRING("LINE_LENGTH","\x11","\x19","\x6c","\x87")},
	{hx::fsInt,(void *) &StaticConfig_obj::EMPTY_CELL_CODE,HX_HCSTRING("EMPTY_CELL_CODE","\x98","\x98","\xbd","\x78")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEVEL1_SCORE,HX_HCSTRING("LEVEL1_SCORE","\x80","\x94","\x21","\x98")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEVEL2_SCORE,HX_HCSTRING("LEVEL2_SCORE","\x41","\x0b","\xb7","\xc1")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEVEL3_SCORE,HX_HCSTRING("LEVEL3_SCORE","\x02","\x82","\x4c","\xeb")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEVEL4_SCORE,HX_HCSTRING("LEVEL4_SCORE","\xc3","\xf8","\xe1","\x14")},
	{hx::fsInt,(void *) &StaticConfig_obj::COLOR_COUNT,HX_HCSTRING("COLOR_COUNT","\x73","\x41","\x86","\x6d")},
	{hx::fsInt,(void *) &StaticConfig_obj::START_COLOR_COUNT,HX_HCSTRING("START_COLOR_COUNT","\xb6","\xf6","\xfb","\xb6")},
	{hx::fsString,(void *) &StaticConfig_obj::GAME_SCREEN,HX_HCSTRING("GAME_SCREEN","\x59","\x7f","\x24","\xd6")},
	{hx::fsString,(void *) &StaticConfig_obj::MENU_SCREEN,HX_HCSTRING("MENU_SCREEN","\x4c","\x6d","\x9d","\x42")},
	{hx::fsString,(void *) &StaticConfig_obj::LEAD_BOARD_DEFAULT_USERNAME,HX_HCSTRING("LEAD_BOARD_DEFAULT_USERNAME","\x50","\x65","\x01","\xe5")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEAD_BOARD_USERNAME_MAX_LENGTH,HX_HCSTRING("LEAD_BOARD_USERNAME_MAX_LENGTH","\x2e","\x50","\xc1","\x97")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEAD_BOARD_LINES,HX_HCSTRING("LEAD_BOARD_LINES","\xc3","\x37","\x9d","\x11")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEAD_BOARD_EVEN_COLOR,HX_HCSTRING("LEAD_BOARD_EVEN_COLOR","\xba","\xfa","\xf9","\x09")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEAD_BOARD_ODD_COLOR,HX_HCSTRING("LEAD_BOARD_ODD_COLOR","\x37","\x17","\x79","\x13")},
	{hx::fsInt,(void *) &StaticConfig_obj::LEAD_BOARD_LINE_HEIGHT,HX_HCSTRING("LEAD_BOARD_LINE_HEIGHT","\xf6","\x30","\x8a","\x16")},
	{hx::fsFloat,(void *) &StaticConfig_obj::LEAD_BOARD_COL1,HX_HCSTRING("LEAD_BOARD_COL1","\xad","\x26","\xea","\x45")},
	{hx::fsFloat,(void *) &StaticConfig_obj::LEAD_BOARD_COL2,HX_HCSTRING("LEAD_BOARD_COL2","\xae","\x26","\xea","\x45")},
	{hx::fsFloat,(void *) &StaticConfig_obj::LEAD_BOARD_COL3,HX_HCSTRING("LEAD_BOARD_COL3","\xaf","\x26","\xea","\x45")},
	{hx::fsInt,(void *) &StaticConfig_obj::TILE_WIDTH,HX_HCSTRING("TILE_WIDTH","\xd5","\x5e","\xc1","\xb3")},
	{hx::fsInt,(void *) &StaticConfig_obj::TILE_HEIGHT,HX_HCSTRING("TILE_HEIGHT","\x18","\x14","\xc1","\x4b")},
	{hx::fsInt,(void *) &StaticConfig_obj::BOARD_WIDTH,HX_HCSTRING("BOARD_WIDTH","\x2d","\x9c","\xb2","\xc1")},
	{hx::fsInt,(void *) &StaticConfig_obj::BOARD_HEIGHT,HX_HCSTRING("BOARD_HEIGHT","\xc0","\x83","\xe5","\x70")},
	{hx::fsInt,(void *) &StaticConfig_obj::BOARD_CELLS,HX_HCSTRING("BOARD_CELLS","\xb8","\x32","\x10","\x3b")},
	{hx::fsFloat,(void *) &StaticConfig_obj::BOARD_LEFT,HX_HCSTRING("BOARD_LEFT","\xa0","\xc7","\x27","\x99")},
	{hx::fsFloat,(void *) &StaticConfig_obj::BOARD_TOP,HX_HCSTRING("BOARD_TOP","\xfc","\xc0","\x4f","\xc7")},
	{hx::fsFloat,(void *) &StaticConfig_obj::BOARD_RIGHT,HX_HCSTRING("BOARD_RIGHT","\x03","\xf2","\xb3","\xe0")},
	{hx::fsFloat,(void *) &StaticConfig_obj::BOARD_BOTTOM,HX_HCSTRING("BOARD_BOTTOM","\xc4","\x62","\x12","\xd4")},
	{hx::fsString,(void *) &StaticConfig_obj::_sourceCodeURL,HX_HCSTRING("_sourceCodeURL","\xe8","\x58","\xae","\xdb")},
	{hx::fsString,(void *) &StaticConfig_obj::sourceCodeURL,HX_HCSTRING("sourceCodeURL","\xa7","\x68","\x5c","\x9d")},
	{hx::fsString,(void *) &StaticConfig_obj::_leadBoardURL,HX_HCSTRING("_leadBoardURL","\x04","\xbb","\xeb","\x2e")},
	{hx::fsString,(void *) &StaticConfig_obj::leadBoardURL,HX_HCSTRING("leadBoardURL","\x25","\x28","\x7d","\x4c")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void StaticConfig_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StaticConfig_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::APPLICATION_NAME,"APPLICATION_NAME");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::DEBUG,"DEBUG");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::UPDATE_DELAY,"UPDATE_DELAY");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::MOVE_DELAY,"MOVE_DELAY");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::TURN_CHIP_NUMBER,"TURN_CHIP_NUMBER");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LINE_LENGTH,"LINE_LENGTH");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::EMPTY_CELL_CODE,"EMPTY_CELL_CODE");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEVEL1_SCORE,"LEVEL1_SCORE");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEVEL2_SCORE,"LEVEL2_SCORE");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEVEL3_SCORE,"LEVEL3_SCORE");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEVEL4_SCORE,"LEVEL4_SCORE");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::COLOR_COUNT,"COLOR_COUNT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::START_COLOR_COUNT,"START_COLOR_COUNT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::GAME_SCREEN,"GAME_SCREEN");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::MENU_SCREEN,"MENU_SCREEN");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_DEFAULT_USERNAME,"LEAD_BOARD_DEFAULT_USERNAME");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_USERNAME_MAX_LENGTH,"LEAD_BOARD_USERNAME_MAX_LENGTH");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_LINES,"LEAD_BOARD_LINES");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_EVEN_COLOR,"LEAD_BOARD_EVEN_COLOR");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_ODD_COLOR,"LEAD_BOARD_ODD_COLOR");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_LINE_HEIGHT,"LEAD_BOARD_LINE_HEIGHT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_COL1,"LEAD_BOARD_COL1");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_COL2,"LEAD_BOARD_COL2");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_COL3,"LEAD_BOARD_COL3");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::TILE_WIDTH,"TILE_WIDTH");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::TILE_HEIGHT,"TILE_HEIGHT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_WIDTH,"BOARD_WIDTH");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_HEIGHT,"BOARD_HEIGHT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_CELLS,"BOARD_CELLS");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_LEFT,"BOARD_LEFT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_TOP,"BOARD_TOP");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_RIGHT,"BOARD_RIGHT");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::BOARD_BOTTOM,"BOARD_BOTTOM");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::_sourceCodeURL,"_sourceCodeURL");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::sourceCodeURL,"sourceCodeURL");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::_leadBoardURL,"_leadBoardURL");
	HX_MARK_MEMBER_NAME(StaticConfig_obj::leadBoardURL,"leadBoardURL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StaticConfig_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::APPLICATION_NAME,"APPLICATION_NAME");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::DEBUG,"DEBUG");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::UPDATE_DELAY,"UPDATE_DELAY");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::MOVE_DELAY,"MOVE_DELAY");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::TURN_CHIP_NUMBER,"TURN_CHIP_NUMBER");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LINE_LENGTH,"LINE_LENGTH");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::EMPTY_CELL_CODE,"EMPTY_CELL_CODE");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEVEL1_SCORE,"LEVEL1_SCORE");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEVEL2_SCORE,"LEVEL2_SCORE");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEVEL3_SCORE,"LEVEL3_SCORE");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEVEL4_SCORE,"LEVEL4_SCORE");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::COLOR_COUNT,"COLOR_COUNT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::START_COLOR_COUNT,"START_COLOR_COUNT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::GAME_SCREEN,"GAME_SCREEN");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::MENU_SCREEN,"MENU_SCREEN");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_DEFAULT_USERNAME,"LEAD_BOARD_DEFAULT_USERNAME");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_USERNAME_MAX_LENGTH,"LEAD_BOARD_USERNAME_MAX_LENGTH");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_LINES,"LEAD_BOARD_LINES");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_EVEN_COLOR,"LEAD_BOARD_EVEN_COLOR");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_ODD_COLOR,"LEAD_BOARD_ODD_COLOR");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_LINE_HEIGHT,"LEAD_BOARD_LINE_HEIGHT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_COL1,"LEAD_BOARD_COL1");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_COL2,"LEAD_BOARD_COL2");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::LEAD_BOARD_COL3,"LEAD_BOARD_COL3");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::TILE_WIDTH,"TILE_WIDTH");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::TILE_HEIGHT,"TILE_HEIGHT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_WIDTH,"BOARD_WIDTH");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_HEIGHT,"BOARD_HEIGHT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_CELLS,"BOARD_CELLS");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_LEFT,"BOARD_LEFT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_TOP,"BOARD_TOP");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_RIGHT,"BOARD_RIGHT");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::BOARD_BOTTOM,"BOARD_BOTTOM");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::_sourceCodeURL,"_sourceCodeURL");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::sourceCodeURL,"sourceCodeURL");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::_leadBoardURL,"_leadBoardURL");
	HX_VISIT_MEMBER_NAME(StaticConfig_obj::leadBoardURL,"leadBoardURL");
};

#endif

hx::Class StaticConfig_obj::__mClass;

static ::String StaticConfig_obj_sStaticFields[] = {
	HX_HCSTRING("APPLICATION_NAME","\xfa","\x90","\x40","\x6c"),
	HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc"),
	HX_HCSTRING("DEBUG","\x33","\x8a","\x0d","\x55"),
	HX_HCSTRING("UPDATE_DELAY","\x6d","\x35","\xf7","\x07"),
	HX_HCSTRING("MOVE_DELAY","\x75","\x24","\x1d","\xac"),
	HX_HCSTRING("TURN_CHIP_NUMBER","\x1a","\xd1","\xc4","\x6d"),
	HX_HCSTRING("LINE_LENGTH","\x11","\x19","\x6c","\x87"),
	HX_HCSTRING("EMPTY_CELL_CODE","\x98","\x98","\xbd","\x78"),
	HX_HCSTRING("LEVEL1_SCORE","\x80","\x94","\x21","\x98"),
	HX_HCSTRING("LEVEL2_SCORE","\x41","\x0b","\xb7","\xc1"),
	HX_HCSTRING("LEVEL3_SCORE","\x02","\x82","\x4c","\xeb"),
	HX_HCSTRING("LEVEL4_SCORE","\xc3","\xf8","\xe1","\x14"),
	HX_HCSTRING("COLOR_COUNT","\x73","\x41","\x86","\x6d"),
	HX_HCSTRING("START_COLOR_COUNT","\xb6","\xf6","\xfb","\xb6"),
	HX_HCSTRING("GAME_SCREEN","\x59","\x7f","\x24","\xd6"),
	HX_HCSTRING("MENU_SCREEN","\x4c","\x6d","\x9d","\x42"),
	HX_HCSTRING("LEAD_BOARD_DEFAULT_USERNAME","\x50","\x65","\x01","\xe5"),
	HX_HCSTRING("LEAD_BOARD_USERNAME_MAX_LENGTH","\x2e","\x50","\xc1","\x97"),
	HX_HCSTRING("LEAD_BOARD_LINES","\xc3","\x37","\x9d","\x11"),
	HX_HCSTRING("LEAD_BOARD_EVEN_COLOR","\xba","\xfa","\xf9","\x09"),
	HX_HCSTRING("LEAD_BOARD_ODD_COLOR","\x37","\x17","\x79","\x13"),
	HX_HCSTRING("LEAD_BOARD_LINE_HEIGHT","\xf6","\x30","\x8a","\x16"),
	HX_HCSTRING("LEAD_BOARD_COL1","\xad","\x26","\xea","\x45"),
	HX_HCSTRING("LEAD_BOARD_COL2","\xae","\x26","\xea","\x45"),
	HX_HCSTRING("LEAD_BOARD_COL3","\xaf","\x26","\xea","\x45"),
	HX_HCSTRING("TILE_WIDTH","\xd5","\x5e","\xc1","\xb3"),
	HX_HCSTRING("TILE_HEIGHT","\x18","\x14","\xc1","\x4b"),
	HX_HCSTRING("BOARD_WIDTH","\x2d","\x9c","\xb2","\xc1"),
	HX_HCSTRING("BOARD_HEIGHT","\xc0","\x83","\xe5","\x70"),
	HX_HCSTRING("BOARD_CELLS","\xb8","\x32","\x10","\x3b"),
	HX_HCSTRING("BOARD_LEFT","\xa0","\xc7","\x27","\x99"),
	HX_HCSTRING("BOARD_TOP","\xfc","\xc0","\x4f","\xc7"),
	HX_HCSTRING("BOARD_RIGHT","\x03","\xf2","\xb3","\xe0"),
	HX_HCSTRING("BOARD_BOTTOM","\xc4","\x62","\x12","\xd4"),
	HX_HCSTRING("_sourceCodeURL","\xe8","\x58","\xae","\xdb"),
	HX_HCSTRING("sourceCodeURL","\xa7","\x68","\x5c","\x9d"),
	HX_HCSTRING("get_sourceCodeURL","\xfe","\x73","\xcc","\xa3"),
	HX_HCSTRING("_leadBoardURL","\x04","\xbb","\xeb","\x2e"),
	HX_HCSTRING("leadBoardURL","\x25","\x28","\x7d","\x4c"),
	HX_HCSTRING("get_leadBoardURL","\xae","\x14","\x1c","\x51"),
	::String(null())
};

void StaticConfig_obj::__register()
{
	hx::Object *dummy = new StaticConfig_obj;
	StaticConfig_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("config.StaticConfig","\x5c","\x4f","\x38","\x35");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StaticConfig_obj::__GetStatic;
	__mClass->mSetStaticField = &StaticConfig_obj::__SetStatic;
	__mClass->mMarkFunc = StaticConfig_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StaticConfig_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StaticConfig_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StaticConfig_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StaticConfig_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StaticConfig_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StaticConfig_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_3_boot)
HXLINE(   3)		APPLICATION_NAME = HX_("Lines",df,4d,2f,08);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_4_boot)
HXLINE(   4)		VERSION = HX_("0.0.1",35,3d,c8,c1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_6_boot)
HXLINE(   6)		DEBUG = true;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_8_boot)
HXLINE(   8)		UPDATE_DELAY = ((Float)60);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_9_boot)
HXLINE(   9)		MOVE_DELAY = ((Float)200);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_11_boot)
HXLINE(  11)		TURN_CHIP_NUMBER = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_12_boot)
HXLINE(  12)		LINE_LENGTH = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_14_boot)
HXLINE(  14)		EMPTY_CELL_CODE = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_16_boot)
HXLINE(  16)		LEVEL1_SCORE = (int)60;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_17_boot)
HXLINE(  17)		LEVEL2_SCORE = (int)120;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_18_boot)
HXLINE(  18)		LEVEL3_SCORE = (int)180;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_19_boot)
HXLINE(  19)		LEVEL4_SCORE = (int)300;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_21_boot)
HXLINE(  21)		COLOR_COUNT = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_22_boot)
HXLINE(  22)		START_COLOR_COUNT = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_29_boot)
HXLINE(  29)		GAME_SCREEN = HX_("gameScreen",fe,24,d3,89);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_30_boot)
HXLINE(  30)		MENU_SCREEN = HX_("menuScreen",6b,76,e1,29);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_37_boot)
HXLINE(  37)		LEAD_BOARD_DEFAULT_USERNAME = HX_("ananimouse",b6,c7,26,12);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_38_boot)
HXLINE(  38)		LEAD_BOARD_USERNAME_MAX_LENGTH = (int)19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_39_boot)
HXLINE(  39)		LEAD_BOARD_LINES = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_40_boot)
HXLINE(  40)		LEAD_BOARD_EVEN_COLOR = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_41_boot)
HXLINE(  41)		LEAD_BOARD_ODD_COLOR = (int)16777215;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_42_boot)
HXLINE(  42)		LEAD_BOARD_LINE_HEIGHT = (int)23;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_43_boot)
HXLINE(  43)		LEAD_BOARD_COL1 = ((Float)10);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_44_boot)
HXLINE(  44)		LEAD_BOARD_COL2 = ((Float)240);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_45_boot)
HXLINE(  45)		LEAD_BOARD_COL3 = ((Float)350);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_52_boot)
HXLINE(  52)		TILE_WIDTH = (int)50;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_53_boot)
HXLINE(  53)		TILE_HEIGHT = (int)50;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_55_boot)
HXLINE(  55)		BOARD_WIDTH = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_56_boot)
HXLINE(  56)		BOARD_HEIGHT = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_57_boot)
HXLINE(  57)		BOARD_CELLS = (::config::StaticConfig_obj::BOARD_WIDTH * ::config::StaticConfig_obj::BOARD_HEIGHT);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_59_boot)
HXLINE(  59)		BOARD_LEFT = ((Float)26);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_60_boot)
HXLINE(  60)		BOARD_TOP = ((Float)70);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_61_boot)
HXLINE(  61)		BOARD_RIGHT = (::config::StaticConfig_obj::BOARD_LEFT + (::config::StaticConfig_obj::TILE_WIDTH * ::config::StaticConfig_obj::BOARD_WIDTH));
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_62_boot)
HXLINE(  62)		BOARD_BOTTOM = (::config::StaticConfig_obj::BOARD_TOP + (::config::StaticConfig_obj::TILE_HEIGHT * ::config::StaticConfig_obj::BOARD_HEIGHT));
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_68_boot)
HXLINE(  68)		_sourceCodeURL = HX_("",00,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_919cd265adcf4db0_75_boot)
HXLINE(  75)		_leadBoardURL = HX_("",00,00,00,00);
            	}
}

} // end namespace config
