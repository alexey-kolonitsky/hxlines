// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#ifndef INCLUDED_assets_GameAssets
#define INCLUDED_assets_GameAssets

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(assets,GameAssets)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)

namespace assets{


class HXCPP_CLASS_ATTRIBUTES GameAssets_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GameAssets_obj OBJ_;
		GameAssets_obj();

	public:
		enum { _hx_ClassId = 0x363cd9f8 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="assets.GameAssets")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"assets.GameAssets"); }

		hx::ObjectPtr< GameAssets_obj > __new() {
			hx::ObjectPtr< GameAssets_obj > __this = new GameAssets_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< GameAssets_obj > __alloc(hx::Ctx *_hx_ctx) {
			GameAssets_obj *__this = (GameAssets_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GameAssets_obj), false, "assets.GameAssets"));
			*(void **)__this = GameAssets_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GameAssets_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GameAssets","\x35","\x36","\x2a","\x85"); }

		static  ::openfl::display::BitmapData get_BTN_RESTART_BITMAP();
		static ::Dynamic get_BTN_RESTART_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_BTN_CONTINUE_BITMAP();
		static ::Dynamic get_BTN_CONTINUE_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_BTN_MENU_BITMAP();
		static ::Dynamic get_BTN_MENU_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_IMG_TIME_BITMAP();
		static ::Dynamic get_IMG_TIME_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_IMG_SCORE_BITMAP();
		static ::Dynamic get_IMG_SCORE_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_BACKGROUND_BITMAP();
		static ::Dynamic get_BACKGROUND_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_BACKGROUND_MENU_BITMAP();
		static ::Dynamic get_BACKGROUND_MENU_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_LEADBOARD_BITMAP();
		static ::Dynamic get_LEADBOARD_BITMAP_dyn();

		static  ::openfl::display::BitmapData get_CHIPS_BITMAP();
		static ::Dynamic get_CHIPS_BITMAP_dyn();

};

} // end namespace assets

#endif /* INCLUDED_assets_GameAssets */ 
