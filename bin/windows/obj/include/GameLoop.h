// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#ifndef INCLUDED_GameLoop
#define INCLUDED_GameLoop

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(GameLoop)
HX_DECLARE_CLASS0(IGameLoopHandler)
HX_DECLARE_CLASS1(haxe,Timer)



class HXCPP_CLASS_ATTRIBUTES GameLoop_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GameLoop_obj OBJ_;
		GameLoop_obj();

	public:
		enum { _hx_ClassId = 0x5a296c5e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="GameLoop")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"GameLoop"); }
		static hx::ObjectPtr< GameLoop_obj > __new();
		static hx::ObjectPtr< GameLoop_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GameLoop_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GameLoop","\x96","\x63","\x8f","\x8d"); }

		::Array< ::Dynamic> _handlers;
		 ::haxe::Timer _timer;
		bool _invalidated;
		Float lastUpdateTime;
		void start();
		::Dynamic start_dyn();

		void stop();
		::Dynamic stop_dyn();

		void add(::Dynamic handler);
		::Dynamic add_dyn();

		void remove(::Dynamic handler);
		::Dynamic remove_dyn();

		void timerHandler();
		::Dynamic timerHandler_dyn();

};


#endif /* INCLUDED_GameLoop */ 
