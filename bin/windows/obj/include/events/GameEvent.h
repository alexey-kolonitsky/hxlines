// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#ifndef INCLUDED_events_GameEvent
#define INCLUDED_events_GameEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
HX_DECLARE_CLASS1(events,GameEvent)
HX_DECLARE_CLASS2(openfl,events,Event)

namespace events{


class HXCPP_CLASS_ATTRIBUTES GameEvent_obj : public  ::openfl::events::Event_obj
{
	public:
		typedef  ::openfl::events::Event_obj super;
		typedef GameEvent_obj OBJ_;
		GameEvent_obj();

	public:
		enum { _hx_ClassId = 0x1c51d16f };

		void __construct(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable,hx::Null< int >  __o_index);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="events.GameEvent")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"events.GameEvent"); }
		static hx::ObjectPtr< GameEvent_obj > __new(::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable,hx::Null< int >  __o_index);
		static hx::ObjectPtr< GameEvent_obj > __alloc(hx::Ctx *_hx_ctx,::String type,hx::Null< bool >  __o_bubbles,hx::Null< bool >  __o_cancelable,hx::Null< int >  __o_index);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GameEvent_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GameEvent","\xa8","\x96","\xb2","\x4c"); }

		static void __boot();
		static ::String CREATE;
		static ::String START;
		static ::String RESULT;
		static ::String SELECT;
		static ::String MOVE;
		static ::String MENU;
		static ::String PATH;
		static ::String SAVE_RESULT;
		int index;
		 ::openfl::events::Event clone();

};

} // end namespace events

#endif /* INCLUDED_events_GameEvent */ 
