// Generated by Haxe 3.4.0 (git build development @ d2a02e8)
#ifndef INCLUDED_model_GameData
#define INCLUDED_model_GameData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(GameState)
HX_DECLARE_CLASS1(model,GameData)

namespace model{


class HXCPP_CLASS_ATTRIBUTES GameData_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GameData_obj OBJ_;
		GameData_obj();

	public:
		enum { _hx_ClassId = 0x49a2b705 };

		void __construct( ::Dynamic init);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="model.GameData")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"model.GameData"); }
		static hx::ObjectPtr< GameData_obj > __new( ::Dynamic init);
		static hx::ObjectPtr< GameData_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic init);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GameData_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GameData","\x5c","\x13","\x3b","\x88"); }

		 ::GameState state;
		int stepCount;
		int level;
		Float duration;
		int score;
		::Array< int > fields;
		int startIndex;
		int endIndex;
		::Array< int > path;
		::String sessionId;
		 ::Dynamic toObject();
		::Dynamic toObject_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace model

#endif /* INCLUDED_model_GameData */ 
